<project name="web_3" basedir="." default="compile">
    <property file="build.properties"/>

    <!-- Путь для классов и библиотек -->
    <path id="classpath">
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${classes.dir}"/>
    </path>

    <!-- Путь для классов и библиотек для тестов -->
    <path id="classpath.test">
        <fileset dir="lib">
            <include name="junit-jupiter-api-*.jar"/>
            <include name="junit-jupiter-engine-*.jar"/>
            <include name="junit-platform-launcher-*.jar"/>
            <include name="junit-platform-console-standalone-1.13.0-M2.jar"/>
        </fileset>
        <pathelement location="${build.dir}/test-classes"/>
    </path>


    <!-- Цель для создания директорий -->
    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${jar.dir}"/>
    </target>

    <!-- Цель для компиляции -->
    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" destdir="${classes.dir}" encoding="UTF-8" source="${javac.source}"
               target="${javac.target}">
            <classpath refid="classpath"/>
        </javac>
    </target>

    <!-- Цель для сборки JAR-архива -->
    <target name="build" depends="compile">
        <jar destfile="${jar.dir}/${jar.name}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Version" value="${version}"/>
            </manifest>
        </jar>
    </target>

    <!-- Цель для тестов -->
    <target name="test" depends="compile">
        <echo message="Running JUnit tests..." />
        <java classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
            <classpath refid="classpath.test"/>
            <arg value="--scan-classpath"/>
        </java>
    </target>

    <!-- Цель для генерации документации Javadoc -->
    <target name="doc" depends="build">
        <javadoc destdir="docs"
                 sourcepath="${src.dir}"
                 classpathref="classpath"
                 author="true"
                 version="true"
                 use="true"
                 windowtitle="MemoriaWebApp Javadoc"
                 doctitle="Memoria Web App API Documentation">
            <packageset dir="${src.dir}" includes="me/vladislav/web_3/**"/>
            <arg value="-Xdoclint:none"/>
        </javadoc>
    </target>

    <!-- Валидация XML -->
    <target name="xml">
        <xmlvalidate lenient="true">
            <fileset dir="./" includes="**/*.xml">
                <exclude name=".idea/**"/>
            </fileset>
        </xmlvalidate>
    </target>

    <!-- Воспроизведение музыки -->
    <target name="music" depends="build">
        <echo message="Playing music..."/>
        <exec executable="C:/Program Files (x86)/Windows Media Player/wmplayer.exe">
            <arg line="${basedir}\sound.mp3"/>
        </exec>
    </target>

    <!-- Альтернативная версия -->
    <target name="alt" depends="build">
        <replaceregexp file="${src.dir}/me/vladislav/web_3/Main.java"
                       match="Hello World"
                       replace="Hello :)"
                       byline="true"/>

        <echo message="Change string in Main.java"/>
        <ant target="build"/>
    </target>

    <!-- Цель для получения предыдущих 3 ревизий из Git и сборки их в один архив -->
    <target name="team" depends="build">
        <mkdir dir="${build.dir}/team_build"/>

        <exec executable="git">
            <arg value="checkout"/>
            <arg value="HEAD"/>
        </exec>

        <ant target="build"/>
        <move file="${jar.dir}/${jar.name}" tofile="${build.dir}/team_build/TeamBuild_HEAD.jar"/>

        <exec executable="git">
            <arg value="checkout"/>
            <arg value="HEAD~1"/>
        </exec>

        <ant target="build"/>
        <move file="${jar.dir}/${jar.name}" tofile="${build.dir}/team_build/TeamBuild_HEAD_1.jar"/>

        <exec executable="git">
            <arg value="checkout"/>
            <arg value="HEAD~2"/>
        </exec>

        <ant target="build"/>
        <move file="${jar.dir}/${jar.name}" tofile="${build.dir}/team_build/TeamBuild_HEAD_2.jar"/>

        <zip destfile="${jar.dir}/LastVersion.zip" basedir="${build.dir}/team_build">
            <include name="**/*.jar"/>
        </zip>

        <!-- Удаляем временную директорию после упаковки -->
        <delete dir="${build.dir}/team_build"/>
    </target>


    <target name="env" depends="build">
        <!-- Запуск приложения с использованием параметров из build.properties -->
        <exec executable="java">
            <arg value="${jvm.args}"/>
            <arg value="-cp"/>
            <arg value="${classes.dir}:${jar.dir}/${jar.name}"/>
            <arg value="${main.class}"/>
        </exec>
    </target>


    <!-- Очистка -->
    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

</project>
